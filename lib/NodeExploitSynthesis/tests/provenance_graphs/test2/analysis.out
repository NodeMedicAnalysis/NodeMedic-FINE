tsc -b
node --trace-uncaught --stack-trace-limit=20 lib/jalangi2-babel/src/js/commands/jalangi.js --analysis src/rewrite.js ../NodeExploitSynthesis/tests/provenance_graphs/test2/driver.js log_level=info policies=object:precise,string:precise,array:precise taint_paths=true taint_paths_json=true assert_passed=false eval_sink=
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
npx browserslist@latest --update-db

Why you should do it regularly:
https://github.com/browserslist/browserslist#browsers-data-updating
INFO: instrumentCodePre on ('var data = {\n' +
  '    b: 1,\n' +
  '    c: tru, NoID) [Internal]

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with instrumentCodePre

INFO: Wrapping literal: ([Function: api], NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with literal

INFO: Wrapping literal: (1, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with literal

INFO: Wrapping literal: (true, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with literal

INFO: Wrapping literal: ('bar', NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with literal

INFO: Wrapping literal: ({ e: [String: 'bar'] }, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with literal

INFO: Wrapping literal: ([ { e: [String: 'bar'] } ], [NoID, ])

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with literal

INFO: Wrapping literal: ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with literal

INFO: Write: (undefined, NoID) = ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with write

INFO: endExpression

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
 }
 C: Unset
==============================

INFO: Done with endExpression

INFO: invokeFunPre on ([Function: __jalangi_set_taint__], NoID) ([ { b: [Number: 1], c: [Boolean: true], d: [Array], [NoID, ]) [External]

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
 }
 C: Unset
==============================

INFO: Done with invokeFunPre

INFO: invokeFun on ([Function: __jalangi_set_taint__], NoID) ([ { b: [Number: 1], c: [Boolean: true], d: [Array], [NoID, ]) = (undefined, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
 }
 C: Unset
==============================

INFO: Done with invokeFun

INFO: endExpression

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 0
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
 }
 C: Unset
==============================

INFO: Done with endExpression

INFO: invokeFunPre on ([Function: api], NoID) ([ { b: [Number: 1], c: [Boolean: true], d: [Array], [NoID, ]) [Internal]

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
 }
 C: Unset
==============================

INFO: Done with invokeFunPre

INFO: functionEnter on ([Function: api], NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
 }
 C: Unset
==============================

INFO: Done with functionEnter

INFO: getFieldPre on ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID).('a', NoID)

INFO: =======================
 frame: {
	[ID(10), ID(11), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID).('a', NoID) = (undefined, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
	[String: 'a'] : ID(11)
	{} : ID(12)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
	ID(12) : { taint: true }
 }
 C: Unset
==============================

INFO: Done with getField

INFO: getFieldPre on ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID).('b', NoID)

INFO: =======================
 frame: {
	[ID(13), ID(14), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 1] : ID(2)
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
	[String: 'a'] : ID(11)
	{} : ID(12)
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
	ID(12) : { taint: true }
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID).('b', NoID) = ([Number: 1], ID(2))

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
	[String: 'a'] : ID(11)
	{} : ID(12)
	[String: 'b'] : ID(14)
	...
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
	ID(12) : { taint: true }
	ID(2) : { taint: true }
 }
 C: Unset
==============================

INFO: Done with getField

INFO: getFieldPre on ([Number: 1], ID(2)).('toFixed', NoID)

INFO: =======================
 frame: {
	[ID(2), ID(16), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Boolean: true] : ID(3)
	[String: 'bar'] : ID(4)
	[String: 'a'] : ID(11)
	{} : ID(12)
	[String: 'b'] : ID(14)
	...
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
	ID(12) : { taint: true }
	ID(2) : { taint: true }
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on (1, NoID).('toFixed', NoID) = ([Function: toFixed], NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'a'] : ID(11)
	{} : ID(12)
	[String: 'b'] : ID(14)
	[String: 'toFixed'] : ID(16)
	[Number: 1] : ID(2)
	...
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
	ID(12) : { taint: true }
	ID(2) : { taint: true }
	[Function: toFixed] : { taint: true }
 }
 C: Unset
==============================

INFO: Done with getField

INFO: invokeFunPre on [([Number: 1], ID(2))/this] ([Function: toFixed], NoID) ([], []) [Native]

INFO: =======================
 frame: {
	[]
	callType: NativeCall
	callerIID: 1508484
 }
 Mw: {
	[String: 'a'] : ID(11)
	{} : ID(12)
	[String: 'b'] : ID(14)
	[String: 'toFixed'] : ID(16)
	[Number: 1] : ID(2)
	...
 }
 Mt: {
	{} : { 
		taint: false, 
		map: {
			'218' : false
			'219' : false
			'220' : false
			'221' : false
			'length' : false
			...
 } 
	}
	{ b: [Number: 1], c: : { taint: true }
	ID(12) : { taint: true }
	ID(2) : { taint: true }
	[Function: toFixed] : { taint: true }
 }
 C: Unset
==============================

INFO: Done with invokeFunPre

INFO: invokeFun on [(1, NoID)/this] ([Function: toFixed], NoID) ([], []) = ('1', NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'b'] : ID(14)
	[String: 'toFixed'] : ID(16)
	[Number: 1] : ID(2)
	[Number: 1] : ID(2)
	[String: '1'] : ID(19)
	...
 }
 Mt: {
	{ b: [Number: 1], c: : { taint: true }
	ID(12) : { taint: true }
	ID(2) : { taint: true }
	[Function: toFixed] : { taint: true }
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with invokeFun

INFO: binaryPre on ({}, ID(12)) + ([String: '1'], ID(19))

INFO: =======================
 frame: {
	[ID(12), ID(19), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'b'] : ID(14)
	[String: 'toFixed'] : ID(16)
	[Number: 1] : ID(2)
	[Number: 1] : ID(2)
	[String: '1'] : ID(19)
	...
 }
 Mt: {
	{ b: [Number: 1], c: : { taint: true }
	ID(12) : { taint: true }
	ID(2) : { taint: true }
	[Function: toFixed] : { taint: true }
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with binaryPre

INFO: binary on (undefined, NoID) + ('1', NoID) = ('undefined1', NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 1] : ID(2)
	[String: '1'] : ID(19)
	[String: '1'] : ID(19)
	{} : ID(12)
	[String: 'undefined1 : ID(20)
	...
 }
 Mt: {
	ID(12) : { taint: true }
	ID(2) : { taint: true }
	[Function: toFixed] : { taint: true }
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with binary

INFO: getFieldPre on ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID).('c', NoID)

INFO: =======================
 frame: {
	[ID(21), ID(22), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 1] : ID(2)
	[String: '1'] : ID(19)
	[String: '1'] : ID(19)
	{} : ID(12)
	[String: 'undefined1 : ID(20)
	...
 }
 Mt: {
	ID(12) : { taint: true }
	ID(2) : { taint: true }
	[Function: toFixed] : { taint: true }
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID).('c', NoID) = ([Boolean: true], ID(3))

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: '1'] : ID(19)
	[String: '1'] : ID(19)
	{} : ID(12)
	[String: 'undefined1 : ID(20)
	[String: 'c'] : ID(22)
	...
 }
 Mt: {
	ID(2) : { taint: true }
	[Function: toFixed] : { taint: true }
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	ID(3) : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with getField

INFO: getFieldPre on ([Boolean: true], ID(3)).('valueOf', NoID)

INFO: =======================
 frame: {
	[ID(3), ID(24), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: '1'] : ID(19)
	[String: '1'] : ID(19)
	{} : ID(12)
	[String: 'undefined1 : ID(20)
	[String: 'c'] : ID(22)
	...
 }
 Mt: {
	ID(2) : { taint: true }
	[Function: toFixed] : { taint: true }
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	ID(3) : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on (true, NoID).('valueOf', NoID) = ([Function: valueOf], NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	{} : ID(12)
	[String: 'undefined1 : ID(20)
	[String: 'c'] : ID(22)
	[String: 'valueOf'] : ID(24)
	[Boolean: true] : ID(3)
	...
 }
 Mt: {
	[Function: toFixed] : { taint: true }
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with getField

INFO: invokeFunPre on [([Boolean: true], ID(3))/this] ([Function: valueOf], NoID) ([], []) [Native]

INFO: =======================
 frame: {
	[]
	callType: NativeCall
	callerIID: 1508571
 }
 Mw: {
	{} : ID(12)
	[String: 'undefined1 : ID(20)
	[String: 'c'] : ID(22)
	[String: 'valueOf'] : ID(24)
	[Boolean: true] : ID(3)
	...
 }
 Mt: {
	[Function: toFixed] : { taint: true }
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with invokeFunPre

INFO: invokeFun on [(true, NoID)/this] ([Function: valueOf], NoID) ([], []) = (true, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'c'] : ID(22)
	[String: 'valueOf'] : ID(24)
	[Boolean: true] : ID(3)
	[Boolean: true] : ID(3)
	[Boolean: true] : ID(27)
	...
 }
 Mt: {
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with invokeFun

INFO: binaryPre on ([String: 'undefined1'], ID(20)) + ([Boolean: true], ID(27))

INFO: =======================
 frame: {
	[ID(20), ID(27), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'c'] : ID(22)
	[String: 'valueOf'] : ID(24)
	[Boolean: true] : ID(3)
	[Boolean: true] : ID(3)
	[Boolean: true] : ID(27)
	...
 }
 Mt: {
	ID(19) : { 
		taint: true, 
		map: {
			'0' : true
			'length' : true
 } 
	}
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with binaryPre

INFO: binary on ('undefined1', NoID) + (true, NoID) = ('undefined1true', NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Boolean: true] : ID(3)
	[Boolean: true] : ID(27)
	[Boolean: true] : ID(27)
	[String: 'undefined1 : ID(20)
	[String: 'undefined1 : ID(28)
	...
 }
 Mt: {
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with binary

INFO: getFieldPre on ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID).('d', NoID)

INFO: =======================
 frame: {
	[ID(29), ID(30), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Boolean: true] : ID(3)
	[Boolean: true] : ID(27)
	[Boolean: true] : ID(27)
	[String: 'undefined1 : ID(20)
	[String: 'undefined1 : ID(28)
	...
 }
 Mt: {
	ID(20) : { 
		taint: true, 
		map: {
			'6' : true
			'7' : true
			'8' : true
			'9' : true
			'length' : true
			...
 } 
	}
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on ({ b: [Number: 1], c: [Boolean: true], d: [ [Object, NoID).('d', NoID) = ([ { e: [String: 'bar'] } ], [NoID, ])

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Boolean: true] : ID(27)
	[Boolean: true] : ID(27)
	[String: 'undefined1 : ID(20)
	[String: 'undefined1 : ID(28)
	[String: 'd'] : ID(30)
	...
 }
 Mt: {
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with getField

INFO: Wrapping literal: (0, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Boolean: true] : ID(27)
	[String: 'undefined1 : ID(20)
	[String: 'undefined1 : ID(28)
	[String: 'd'] : ID(30)
	[Number: 0] : ID(33)
	...
 }
 Mt: {
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with literal

INFO: getFieldPre on ([ { e: [String: 'bar'] } ], [NoID, ]).([Number: 0], ID(33))

INFO: =======================
 frame: {
	[ID(34), ID(33), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Boolean: true] : ID(27)
	[String: 'undefined1 : ID(20)
	[String: 'undefined1 : ID(28)
	[String: 'd'] : ID(30)
	[Number: 0] : ID(33)
	...
 }
 Mt: {
	ID(3) : { taint: true }
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on ([ { e: [String: 'bar'] } ], [NoID, ]).(0, NoID) = ({ e: [String: 'bar'] }, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'undefined1 : ID(20)
	[String: 'undefined1 : ID(28)
	[String: 'd'] : ID(30)
	[Number: 0] : ID(33)
	[Number: 0] : ID(33)
	...
 }
 Mt: {
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with getField

INFO: getFieldPre on ({ e: [String: 'bar'] }, NoID).('e', NoID)

INFO: =======================
 frame: {
	[ID(37), ID(38), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'undefined1 : ID(20)
	[String: 'undefined1 : ID(28)
	[String: 'd'] : ID(30)
	[Number: 0] : ID(33)
	[Number: 0] : ID(33)
	...
 }
 Mt: {
	[Function: valueOf] : { taint: true }
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on ({ e: [String: 'bar'] }, NoID).('e', NoID) = ([String: 'bar'], ID(4))

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'undefined1 : ID(28)
	[String: 'd'] : ID(30)
	[Number: 0] : ID(33)
	[Number: 0] : ID(33)
	[String: 'e'] : ID(38)
	...
 }
 Mt: {
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	ID(4) : { 
		taint: true, 
		map: {
			'0' : true
			'1' : true
			'2' : true
			'length' : true
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with getField

INFO: getFieldPre on ([String: 'bar'], ID(4)).('length', NoID)

INFO: =======================
 frame: {
	[ID(4), ID(40), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'undefined1 : ID(28)
	[String: 'd'] : ID(30)
	[Number: 0] : ID(33)
	[Number: 0] : ID(33)
	[String: 'e'] : ID(38)
	...
 }
 Mt: {
	ID(27) : { taint: true }
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	ID(4) : { 
		taint: true, 
		map: {
			'0' : true
			'1' : true
			'2' : true
			'length' : true
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with getFieldPre

INFO: getField on ('bar', NoID).('length', NoID) = (3, NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 0] : ID(33)
	[String: 'e'] : ID(38)
	[String: 'length'] : ID(40)
	[String: 'bar'] : ID(4)
	[Number: 3] : ID(41)
	...
 }
 Mt: {
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	ID(4) : { 
		taint: true, 
		map: {
			'0' : true
			'1' : true
			'2' : true
			'length' : true
 } 
	}
	ID(41) : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with getField

INFO: binaryPre on ([String: 'undefined1true'], ID(28)) + ([Number: 3], ID(41))

INFO: =======================
 frame: {
	[ID(28), ID(41), ]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[Number: 0] : ID(33)
	[String: 'e'] : ID(38)
	[String: 'length'] : ID(40)
	[String: 'bar'] : ID(4)
	[Number: 3] : ID(41)
	...
 }
 Mt: {
	ID(28) : { 
		taint: true, 
		map: {
			'10' : true
			'11' : true
			'12' : true
			'13' : true
			'length' : true
			...
 } 
	}
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	ID(4) : { 
		taint: true, 
		map: {
			'0' : true
			'1' : true
			'2' : true
			'length' : true
 } 
	}
	ID(41) : { taint: true }
	...
 }
 C: Unset
==============================

INFO: Done with binaryPre

INFO: binary on ('undefined1true', NoID) + (3, NoID) = ('undefined1true3', NoID)

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'bar'] : ID(4)
	[Number: 3] : ID(41)
	[Number: 3] : ID(41)
	[String: 'undefined1 : ID(28)
	[String: 'undefined1 : ID(42)
	...
 }
 Mt: {
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	ID(4) : { 
		taint: true, 
		map: {
			'0' : true
			'1' : true
			'2' : true
			'length' : true
 } 
	}
	ID(41) : { taint: true }
	ID(42) : { 
		taint: true, 
		map: {
			'11' : true
			'12' : true
			'13' : true
			'14' : true
			'length' : true
			...
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with binary

INFO: Write: (undefined, NoID) = ([String: 'undefined1true3'], ID(42))

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'bar'] : ID(4)
	[Number: 3] : ID(41)
	[Number: 3] : ID(41)
	[String: 'undefined1 : ID(28)
	[String: 'undefined1 : ID(42)
	...
 }
 Mt: {
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	ID(4) : { 
		taint: true, 
		map: {
			'0' : true
			'1' : true
			'2' : true
			'length' : true
 } 
	}
	ID(41) : { taint: true }
	ID(42) : { 
		taint: true, 
		map: {
			'11' : true
			'12' : true
			'13' : true
			'14' : true
			'length' : true
			...
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with write

INFO: endExpression

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'bar'] : ID(4)
	[Number: 3] : ID(41)
	[Number: 3] : ID(41)
	[String: 'undefined1 : ID(28)
	[String: 'undefined1 : ID(42)
	...
 }
 Mt: {
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	ID(4) : { 
		taint: true, 
		map: {
			'0' : true
			'1' : true
			'2' : true
			'length' : true
 } 
	}
	ID(41) : { taint: true }
	ID(42) : { 
		taint: true, 
		map: {
			'11' : true
			'12' : true
			'13' : true
			'14' : true
			'length' : true
			...
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with endExpression

INFO: instrumentCodePre on ([String: 'undefined1true3'], ID(42)) [External]

INFO: functionExit

INFO: =======================
 frame: {
	[]
	callType: InternalCall
	callerIID: 1510311
 }
 Mw: {
	[String: 'bar'] : ID(4)
	[Number: 3] : ID(41)
	[Number: 3] : ID(41)
	[String: 'undefined1 : ID(28)
	[String: 'undefined1 : ID(42)
	...
 }
 Mt: {
	[ { e: [String: 'bar : { taint: true }
	{ e: [String: 'bar'] : { taint: true }
	ID(4) : { 
		taint: true, 
		map: {
			'0' : true
			'1' : true
			'2' : true
			'length' : true
 } 
	}
	ID(41) : { taint: true }
	ID(42) : { 
		taint: true, 
		map: {
			'11' : true
			'12' : true
			'13' : true
			'14' : true
			'length' : true
			...
 } 
	}
	...
 }
 C: Unset
==============================

INFO: Done with functionExit

/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/runtime/analysis.js:515
            throw tmp;
            ^

Error: Sink function eval reached with tainted argument [String: 'undefined1

    at TEvalPolicy (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/modules/Eval.js:107:19)
    at EvalApplyRewritePolicy (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/modules/Eval.js:90:9)
    at TEvalPre (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/Taint.js:333:46)
    at Instrumentation.instrumentCodePre (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/Base.js:264:64)
    at MyAnalysis.instrumentCodePre (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/rewrite.js:115:39)
    at instrumentCode (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/instrument/esnstrument.js:1949:37)
    at Object.instrumentEvalCode (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/instrument/esnstrument.js:1913:16)
    at api (/Users/darion/projects/javascript_analysis/NodeExploitSynthesis/tests/provenance_graphs/test2/driver.js:15:48)
    at callFun (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/runtime/analysis.js:196:51)
    at invokeFun (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/runtime/analysis.js:217:22)
    at /Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/runtime/analysis.js:233:41
    at Object.<anonymous> (/Users/darion/projects/javascript_analysis/NodeExploitSynthesis/tests/provenance_graphs/test2/driver.js:36:62)
    at Module._compile (node:internal/modules/cjs/loader:1267:14)
    at Module._extensions..js (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/commands/jalangi.js:109:12)
    at Module.load (node:internal/modules/cjs/loader:1125:32)
    at Module._load (node:internal/modules/cjs/loader:965:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)
    at startProgram (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/commands/jalangi.js:121:19)
    at MyAnalysis.onReady (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/rewrite.js:131:13)
    at Object.<anonymous> (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/commands/jalangi.js:125:17)
    at Module._compile (node:internal/modules/cjs/loader:1267:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1321:10)
    at Module.load (node:internal/modules/cjs/loader:1125:32)
    at Module._load (node:internal/modules/cjs/loader:965:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)
    at node:internal/main/run_main_module:23:47
Thrown at:
    at TEvalPolicy (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/modules/Eval.js:107:19)
    at EvalApplyRewritePolicy (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/modules/Eval.js:90:9)
    at TEvalPre (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/Taint.js:333:46)
    at Instrumentation.instrumentCodePre (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/Base.js:264:64)
    at MyAnalysis.instrumentCodePre (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/src/rewrite.js:115:39)
    at instrumentCode (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/instrument/esnstrument.js:1949:37)
    at instrumentEvalCode (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/instrument/esnstrument.js:1913:16)
    at api (/Users/darion/projects/javascript_analysis/NodeExploitSynthesis/tests/provenance_graphs/test2/driver.js:15:48)
    at callFun (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/runtime/analysis.js:196:51)
    at invokeFun (/Users/darion/projects/javascript_analysis/NodeExploitAnalysis/lib/jalangi2-babel/src/js/runtime/analysis.js:217:22)


Node.js v20.0.0
make: *** [analyze] Error 1
